/*------------------------------------*\
  #MEDIA-BOX
\*------------------------------------*/

/**
 * Provide a media container in order to display media (usually images)
 * cropped to certain ratios and provide a placeholder box while images
 * are still loading
 *
 * 1. Set up a positioning context in which the image can sit.
 * 2. This is the crucial part: where the cropping happens.
 * 3. Default aspect ratio
 * 4. Remove blitzer
 * 5. Include aspect ratio hack for legacy devices
 */

// media box containing images or videos
// by default aspect ratio is defined by content
.media-box {
    position: relative; // [1]
    overflow: hidden; // [2]
    --aspect-ratio: var(--ratio-landscape-min); // [3] // 0.75
    @include aspect-ratio(); // [4]
    background: var(--bg-media-box);

    img {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        object-fit: cover;
        object-position: 50% 50%;
    }

    .video {
        position: absolute;
        inset: 0 0 0 0;
    }

    object,
    iframe {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
    }
}

.media-box--img-fade {
    // fading in picture to keep img transitions for hover etc
    picture {
        transition: opacity 1s var(--trans-func-ease-out);
    }
}

.media-box--img-fade-waiting {
    // hide picture while waiting for load
    picture {
        transition: none;
        opacity: 0;
    }
}

.media-box--teaser {
    // Has specific height to align landscape and portrait images
    // Calc based on --ratio-portrait
    --_teaser-img-h: calc((100vw - (var(--body-p) * 2)) / var(--grid-cols, 2) * var(--ratio-portrait));
    height: var(--_teaser-img-h);

    &:before {
        display: none;
    }
}

.media-box--portrait { // 4:5 format
    --aspect-ratio: var(--ratio-portrait) !important;
}

.media-box--portrait-mid { // 3:4 format
    --aspect-ratio: var(--ratio-portrait-mid) !important;
}

.media-box--portrait-max { // 2:3 format
    --aspect-ratio: var(--ratio-portrait-max) !important;
}

.media-box--cube { // 1:1 format
    --aspect-ratio: var(--ratio-cube) !important;
}

.media-box--landscape { // 4:3 format
    --aspect-ratio: var(--ratio-landscape !important);
}

.media-box--landscape-mid { // 3:2 format
    --aspect-ratio: var(--ratio-landscape-mid) !important;
}

.media-box--landscape-max { // 13:8 format // Match 2 default portrait ratios
    --aspect-ratio: var(--ratio-landscape-max) !important;
}

.media-box--wide { // 16:9 format
    --aspect-ratio: var(--ratio-landscape-max) !important;
}

.video__player {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: 50% 50%;
}

.video__poster {
    display: none;
    position: absolute;
    inset: 0 0 0 0;
    pointer-events: none;
    z-index: 2;
    opacity: 1;
    transition: opacity var(--trans-time-md) var(--trans-func-ease-out);

    .is-autoplay-not-allowed & {
        display: block;
    }

    .is-playing &,
    .has-played-before & {
        opacity: 0;
    }
}

.video__play-button {
    position: absolute;
    top: calc(50% - 2rem);
    left: calc(50% - 2rem);
    width: 4rem;
    height: 4rem;
    z-index: 3;
    opacity: 1;
    transition: opacity var(--trans-time-md) var(--trans-func-ease-out);
    display: none;

    .is-autoplay-not-allowed & {
        display: inline-block;
    }

    .is-playing & {
        opacity: 0;
        pointer-events: none;
    }
}